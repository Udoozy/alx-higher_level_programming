===================
7-base_geometry.py
===================

Usage
======

``base_geometry(...)``` Used to validate value
------------------------------------------------

::


	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

::

	>>> bg.integer_validator('age', '30')
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

::

	>>> bg.integer_validator("age", 33)


::

	>>> bg.integer_validator("age", -7)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

::

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

::

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

::

	>>> bg.integer_validator("My_name")
	Traceback (most recent call last):
  	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

::

	>>> bg.integer_validator("My_name", 34, "Am")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

::
	>>> bg.integer_validator("My_name", 3.4)
	Traceback (most recent call last):
	...
	TypeError: My_name must be an integer

::
	>>> bg.integer_validator("My_name", False)
	Traceback (most recent call last):
	...
	TypeError: My_name must be an integer

::

	>>> doc = BaseGeometry = __import__('7-base_geometry').BaseGeometry.__doc__
	>>> len(doc) > 1
	True

::

	>>> doc = BaseGeometry = __import__('7-base_geometry').BaseGeometry.area.__doc__
	>>> len(doc) > 1
	True
